{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Excel1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText6",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "lookup2"
				},
				{
					"name": "select"
				}
			],
			"scriptLines": [
				"source(output(",
				"          JNCOUNTER as string,",
				"          AGENCYNAME as string,",
				"          AGENCYNUMBER as string,",
				"          JOBREFERENCE as string,",
				"          JOBTYPE as string,",
				"          POSITION as string,",
				"          SKILLS as string,",
				"          LOCATION as string,",
				"          STARTDATE as string,",
				"          DURATION as string,",
				"          RATE as string,",
				"          CONTACT as string,",
				"          DATEINPUT as string,",
				"          NOTES as string,",
				"          OTHER as string,",
				"          ORIGINALDATE as string,",
				"          INDUSTRY as string,",
				"          JOB_STATUS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          JOBTYPE as string,",
				"          Type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          POSITION as string,",
				"          Type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source1, source2 lookup(source1@JOBTYPE == source2@JOBTYPE,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"lookup1, source3 lookup(source1@POSITION == source3@POSITION,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup2",
				"lookup2 select(mapColumn(",
				"          JNCOUNTER,",
				"          AGENCYNAME,",
				"          AGENCYNUMBER,",
				"          JOBREFERENCE,",
				"          JOBTYPESS = source1@JOBTYPE,",
				"          POSITIONS = source1@POSITION,",
				"          SKILLS,",
				"          LOCATION,",
				"          STARTDATE,",
				"          DURATION,",
				"          RATE,",
				"          CONTACT,",
				"          DATEINPUT,",
				"          NOTES,",
				"          OTHER,",
				"          ORIGINALDATE,",
				"          INDUSTRY,",
				"          JOB_STATUS,",
				"          JOBTYPE = source2@JOBTYPE,",
				"          JobTypes = source2@Type,",
				"          POSITIONSS = source3@POSITION,",
				"          JobPosition = source3@Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          JNCOUNTER as string,",
				"          AGENCYNAME as string,",
				"          AGENCYNUMBER as string,",
				"          JOBREFERENCE as string,",
				"          JOBTYPESS as string,",
				"          POSITIONS as string,",
				"          SKILLS as string,",
				"          LOCATION as string,",
				"          STARTDATE as string,",
				"          DURATION as string,",
				"          RATE as string,",
				"          CONTACT as string,",
				"          DATEINPUT as string,",
				"          NOTES as string,",
				"          OTHER as string,",
				"          ORIGINALDATE as string,",
				"          INDUSTRY as string,",
				"          JOB_STATUS as string,",
				"          JOBTYPE as string,",
				"          JobTypes as string,",
				"          POSITIONSS as string,",
				"          JobPosition as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}